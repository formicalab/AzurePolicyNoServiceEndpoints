{
    "properties": {
      "displayName": "BlockServiceEndpoints",
      "policyType": "Custom",
      "mode": "All",
      "metadata": {
        "category": "",
        "createdBy": "0af04b7f-fd9c-4084-8ac4-a7f431a5b0a3",
        "createdOn": "2025-02-04T21:52:18.5853681Z",
        "updatedBy": "0af04b7f-fd9c-4084-8ac4-a7f431a5b0a3",
        "updatedOn": "2025-02-27T21:07:17.001611Z"
      },
      "version": "1.0.0",
      "parameters": {
        "vnetId": {
          "type": "String",
          "metadata": {
            "displayName": "VNet Resource ID",
            "description": "The full resource ID of the VNet to control."
          }
        },
        "subnetId": {
          "type": "String",
          "metadata": {
            "displayName": "Subnet Resource ID",
            "description": "The full resource ID of the subnet to control."
          }
        },
        "allowedServiceEndpoints": {
          "type": "Array",
          "metadata": {
            "displayName": "Allowed Service Endpoints",
            "description": "The list of allowed service endpoint service names."
          }
        }
      },
      "policyRule": {
        "if": {
          "anyOf": [
            {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks"
                },
                {
                  "field": "id",
                  "equals": "[parameters('vnetId')]"
                },
                {
                  "field": "Microsoft.Network/virtualNetworks/subnets[*].id",
                  "equals": "[parameters('subnetId')]"
                },
                {
                  "count": {
                    "field": "Microsoft.Network/virtualNetworks/subnets[*].serviceEndpoints[*]",
                    "where": {
                      "not": {
                        "field": "Microsoft.Network/virtualNetworks/subnets[*].serviceEndpoints[*].service",
                        "in": "[parameters('allowedServiceEndpoints')]"
                      }
                    }
                  },
                  "greater": 0
                }
              ]
            },
            {
              "allOf": [
                {
                  "field": "type",
                  "equals": "Microsoft.Network/virtualNetworks/subnets"
                },
                {
                  "field": "id",
                  "equals": "[parameters('subnetId')]"
                },
                {
                  "count": {
                    "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*]",
                    "where": {
                      "not": {
                        "field": "Microsoft.Network/virtualNetworks/subnets/serviceEndpoints[*].service",
                        "in": "[parameters('allowedServiceEndpoints')]"
                      }
                    }
                  },
                  "greater": 0
                }
              ]
            }
          ]
        },
        "then": {
          "effect": "deny"
        }
      },
      "versions": [
        "1.0.0"
      ]
    },
    "id": "/subscriptions/b3e40add-cb04-47b5-b47a-4a34f98d5ee7/providers/Microsoft.Authorization/policyDefinitions/fa5dbea1-282a-4233-8744-debc2e185e68",
    "type": "Microsoft.Authorization/policyDefinitions",
    "name": "fa5dbea1-282a-4233-8744-debc2e185e68",
    "systemData": {
      "createdBy": "marcello@cloud.formicalab.casa",
      "createdByType": "User",
      "createdAt": "2025-02-04T21:52:18.5488904Z",
      "lastModifiedBy": "marcello@cloud.formicalab.casa",
      "lastModifiedByType": "User",
      "lastModifiedAt": "2025-02-27T21:07:16.9721Z"
    }
  }